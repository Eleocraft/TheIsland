//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/Settings/InputSystem/InputMaster.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaster : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMaster"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""bb2bf03d-b09a-49e6-9747-296afdd0b3c4"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""85188bcb-0616-4af6-bec2-ef74f295090e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""View"",
                    ""type"": ""Value"",
                    ""id"": ""819faee0-56cc-4e28-993a-447bd39e23f1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""684b8c32-3200-49ee-8f6c-59032cef3ec9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Running"",
                    ""type"": ""Button"",
                    ""id"": ""06b16ca3-f2c0-4943-978b-c9c81828e499"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeMode"",
                    ""type"": ""Button"",
                    ""id"": ""615bfd7a-8f44-4998-b1c3-9dd57fbcfa3b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""777992cd-0e2d-4427-a8ab-e3fb6acf9a9a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""c4e611a8-f0db-4de2-85d4-2b3242fb211c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dc05ee21-8e2b-4683-a6e0-56da288b6f6e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""33ebcf53-dabc-4814-8179-cf6764566df9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8e5045c2-8ac0-47fb-9abf-8b98ede3772b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2e3d3f4b-a548-4a67-aa85-3e2aba50ffda"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6e7bf5e2-0acc-49bf-83ba-629c4e590b70"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""View"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MouseLook"",
                    ""id"": ""d341bb6a-1297-4db9-89ad-a8a1fe4aa0ee"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""View"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""c0a7f013-b9e4-48da-87ef-1ff7bc41e43d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""View"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ac73f092-a037-4bc3-82dc-c44af1aa86f3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""View"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""211ecb4a-1582-4b0b-8506-7be70bbe84f9"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""View"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3b4e4824-4ead-4ba0-89d6-53cf97a103d5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8e7a3dc-8a25-4974-b699-cebb576576a0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76aad2a5-caf2-45c5-b6bd-b7d74a4097cf"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05b1f496-c8f6-43c8-ae9e-493632473a3f"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2bea8610-4c0b-4049-b8a9-1ffb85b00eb0"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ChangeMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba5fc8dc-6348-421a-b588-d40f894b2b6a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerFP"",
            ""id"": ""57e3b50d-6e7b-4663-abb9-41c809ff1610"",
            ""actions"": [
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""2b97ad86-b75f-422e-9626-ff6a50c0fcd1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drop"",
                    ""type"": ""Button"",
                    ""id"": ""b9b25248-5ebf-4988-92fd-5e3cb1335106"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MainAction"",
                    ""type"": ""Button"",
                    ""id"": ""2ebdba9b-bfd8-486b-b011-2bc4e5236ea9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotbarslotChange"",
                    ""type"": ""Value"",
                    ""id"": ""c0ce6498-4158-440f-ad7c-a7e3a5329850"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Hotbarslot1"",
                    ""type"": ""Button"",
                    ""id"": ""01577af6-f730-4d37-ac11-5fe56bd20a90"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot2"",
                    ""type"": ""Button"",
                    ""id"": ""85c7fb5c-0c41-4039-b9e5-661f46607141"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot3"",
                    ""type"": ""Button"",
                    ""id"": ""8c580906-ce31-41d4-ba8f-711227de84dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot4"",
                    ""type"": ""Button"",
                    ""id"": ""4a0eb1d9-15c2-43dd-992d-47f287756e19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot5"",
                    ""type"": ""Button"",
                    ""id"": ""bb7c7806-4b32-4a7c-a9cc-034b516a2d53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot6"",
                    ""type"": ""Button"",
                    ""id"": ""b5ea05fe-a653-404e-b434-206975547ed4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot7"",
                    ""type"": ""Button"",
                    ""id"": ""72d9c2b6-bbce-4e26-a2db-f71bdd85fcd0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""69009410-aeaa-497d-9274-0753d372a006"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea050d2a-58a4-4c50-8f84-4dff9aa088e9"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c6b5f21-81fd-44e6-9864-0e0754d97ad8"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44525734-1a66-4f6e-9ea0-9dc55a9317a0"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4f93b6d-b737-4791-9ba9-ca66804ac9a7"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8378fb3-b580-41b5-8ec3-18b8d59075ab"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f159ce7-7b6a-4f3e-bca1-f7cc419eab2d"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2264f02e-684d-46c5-aa7a-628a6b0da1f7"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b75c315b-1597-455f-b6f3-9115dad043d8"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2138c303-2daf-4faf-92c3-d26720af52e1"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07302fd7-f1ad-4f7a-983a-a33a668d1929"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""159a59dc-f2b4-470d-a682-facb9fc540fd"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd40510f-7bbd-49f4-a783-4c5a968af9da"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3edc7710-5626-4064-a7c4-5a2da8ba47e3"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""HotbarslotChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerTP"",
            ""id"": ""8f337fa3-9ac2-465b-b47a-d18e6c54c496"",
            ""actions"": [
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""49d44142-3c97-463b-aba1-686a8201af81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DrawBow"",
                    ""type"": ""Button"",
                    ""id"": ""7bc63e02-c0a3-480b-9b5e-82e60bde876f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HeavyAttack"",
                    ""type"": ""Button"",
                    ""id"": ""27ec0ee3-33ba-41f3-b235-77eaac40dd44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e474157d-520e-4fea-bf6e-03407f2102c0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88beaec0-3b92-41f5-8e49-83a6e04661e3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""DrawBow"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59b4a79e-5757-43d0-88c1-c8caf35007d4"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""HeavyAttack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Raft"",
            ""id"": ""0beef566-9811-478f-9374-d39a250aa75e"",
            ""actions"": [
                {
                    ""name"": ""ChangeValue"",
                    ""type"": ""Value"",
                    ""id"": ""5757f4f5-5116-4cdd-be4e-576bd027180d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cb5ae268-e2c9-4e27-813c-4e2bc9313c35"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""025bf7d1-d55c-4afa-a25b-74ac98778f3f"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MouseLook"",
                    ""id"": ""63378f29-875f-4df3-a565-7ea67f3743e2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""39f79362-7f5a-459c-bd99-04fff75ad7f4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e6058dfd-1fb8-41e9-b018-1981e63ac940"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menus"",
            ""id"": ""f0ca63c3-db6a-40d9-a82e-7c6c1e69fea4"",
            ""actions"": [
                {
                    ""name"": ""ToggleInventory"",
                    ""type"": ""Button"",
                    ""id"": ""749f5997-2d5e-4111-936b-59a2a8d44887"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""11431a69-055e-4368-8ca9-280f646edf55"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""dbfdd532-598e-4bae-8eca-3477fccd1fb6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExitSign"",
                    ""type"": ""Button"",
                    ""id"": ""f7fdf149-198b-4320-beee-e0b2608d6604"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""a40a69aa-8fe8-4add-aa65-57ba66331baa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4bd7b695-5cfc-4fd0-8627-05db3ef1e42f"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ToggleInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7980238-6f5e-43c2-bf1b-3d22c1915861"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16d5a9b5-ab46-457e-b90e-aa129e954857"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""MouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f94185cb-02e0-46bf-a716-a45cf18997af"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitSign"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb6061a7-88fb-4a00-8648-15fad642ed79"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitSign"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cee9ac2f-e672-425f-a411-22a8e12f7ea0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitSign"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e368ee27-2f0d-4bb6-8143-b8621527e1a6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitSign"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7b1e050-bea8-42c2-9390-4b8c16e123ae"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""8db3160d-85e8-4c5c-8a9e-aa89e04deddc"",
            ""actions"": [
                {
                    ""name"": ""Open"",
                    ""type"": ""Button"",
                    ""id"": ""48b886b4-ce83-4fe9-b9c0-fb54cbc317d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AutoComplete"",
                    ""type"": ""Button"",
                    ""id"": ""83936f65-9248-467c-9ecd-9b86c6fde105"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LoadCommand"",
                    ""type"": ""Button"",
                    ""id"": ""0dce81a7-ec7a-48f0-acdd-52652a3936fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HideHUD"",
                    ""type"": ""Button"",
                    ""id"": ""f018d030-26ad-48e5-bd77-fc4a268456e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""1525c1ad-bc2c-4b7e-94ca-4787805d6db2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6a207e68-f2d8-4b02-b6d8-235190e94a63"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""510eaf1e-50a3-4280-8d55-4c7ed1b4e10a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""LoadCommand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4ea3f5f-efb3-48f3-8a95-6d652681275e"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""HideHUD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""107e0dbf-ca72-4dc3-986e-066a77f16edd"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54fb3169-c441-4c57-8b67-b7c76c46ea04"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""AutoComplete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard/Mouse"",
            ""bindingGroup"": ""Keyboard/Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_View = m_Player.FindAction("View", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Running = m_Player.FindAction("Running", throwIfNotFound: true);
        m_Player_ChangeMode = m_Player.FindAction("ChangeMode", throwIfNotFound: true);
        // PlayerFP
        m_PlayerFP = asset.FindActionMap("PlayerFP", throwIfNotFound: true);
        m_PlayerFP_Interaction = m_PlayerFP.FindAction("Interaction", throwIfNotFound: true);
        m_PlayerFP_Drop = m_PlayerFP.FindAction("Drop", throwIfNotFound: true);
        m_PlayerFP_MainAction = m_PlayerFP.FindAction("MainAction", throwIfNotFound: true);
        m_PlayerFP_HotbarslotChange = m_PlayerFP.FindAction("HotbarslotChange", throwIfNotFound: true);
        m_PlayerFP_Hotbarslot1 = m_PlayerFP.FindAction("Hotbarslot1", throwIfNotFound: true);
        m_PlayerFP_Hotbarslot2 = m_PlayerFP.FindAction("Hotbarslot2", throwIfNotFound: true);
        m_PlayerFP_Hotbarslot3 = m_PlayerFP.FindAction("Hotbarslot3", throwIfNotFound: true);
        m_PlayerFP_Hotbarslot4 = m_PlayerFP.FindAction("Hotbarslot4", throwIfNotFound: true);
        m_PlayerFP_Hotbarslot5 = m_PlayerFP.FindAction("Hotbarslot5", throwIfNotFound: true);
        m_PlayerFP_Hotbarslot6 = m_PlayerFP.FindAction("Hotbarslot6", throwIfNotFound: true);
        m_PlayerFP_Hotbarslot7 = m_PlayerFP.FindAction("Hotbarslot7", throwIfNotFound: true);
        // PlayerTP
        m_PlayerTP = asset.FindActionMap("PlayerTP", throwIfNotFound: true);
        m_PlayerTP_Attack = m_PlayerTP.FindAction("Attack", throwIfNotFound: true);
        m_PlayerTP_DrawBow = m_PlayerTP.FindAction("DrawBow", throwIfNotFound: true);
        m_PlayerTP_HeavyAttack = m_PlayerTP.FindAction("HeavyAttack", throwIfNotFound: true);
        // Raft
        m_Raft = asset.FindActionMap("Raft", throwIfNotFound: true);
        m_Raft_ChangeValue = m_Raft.FindAction("ChangeValue", throwIfNotFound: true);
        // Menus
        m_Menus = asset.FindActionMap("Menus", throwIfNotFound: true);
        m_Menus_ToggleInventory = m_Menus.FindAction("ToggleInventory", throwIfNotFound: true);
        m_Menus_MousePosition = m_Menus.FindAction("MousePosition", throwIfNotFound: true);
        m_Menus_MouseClick = m_Menus.FindAction("MouseClick", throwIfNotFound: true);
        m_Menus_ExitSign = m_Menus.FindAction("ExitSign", throwIfNotFound: true);
        m_Menus_Escape = m_Menus.FindAction("Escape", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_Open = m_Debug.FindAction("Open", throwIfNotFound: true);
        m_Debug_AutoComplete = m_Debug.FindAction("AutoComplete", throwIfNotFound: true);
        m_Debug_LoadCommand = m_Debug.FindAction("LoadCommand", throwIfNotFound: true);
        m_Debug_HideHUD = m_Debug.FindAction("HideHUD", throwIfNotFound: true);
        m_Debug_Newaction = m_Debug.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_View;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Running;
    private readonly InputAction m_Player_ChangeMode;
    public struct PlayerActions
    {
        private @InputMaster m_Wrapper;
        public PlayerActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @View => m_Wrapper.m_Player_View;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Running => m_Wrapper.m_Player_Running;
        public InputAction @ChangeMode => m_Wrapper.m_Player_ChangeMode;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMovement;
                @View.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnView;
                @View.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnView;
                @View.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnView;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Running.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRunning;
                @Running.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRunning;
                @Running.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRunning;
                @ChangeMode.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeMode;
                @ChangeMode.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeMode;
                @ChangeMode.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeMode;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @View.started += instance.OnView;
                @View.performed += instance.OnView;
                @View.canceled += instance.OnView;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Running.started += instance.OnRunning;
                @Running.performed += instance.OnRunning;
                @Running.canceled += instance.OnRunning;
                @ChangeMode.started += instance.OnChangeMode;
                @ChangeMode.performed += instance.OnChangeMode;
                @ChangeMode.canceled += instance.OnChangeMode;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // PlayerFP
    private readonly InputActionMap m_PlayerFP;
    private IPlayerFPActions m_PlayerFPActionsCallbackInterface;
    private readonly InputAction m_PlayerFP_Interaction;
    private readonly InputAction m_PlayerFP_Drop;
    private readonly InputAction m_PlayerFP_MainAction;
    private readonly InputAction m_PlayerFP_HotbarslotChange;
    private readonly InputAction m_PlayerFP_Hotbarslot1;
    private readonly InputAction m_PlayerFP_Hotbarslot2;
    private readonly InputAction m_PlayerFP_Hotbarslot3;
    private readonly InputAction m_PlayerFP_Hotbarslot4;
    private readonly InputAction m_PlayerFP_Hotbarslot5;
    private readonly InputAction m_PlayerFP_Hotbarslot6;
    private readonly InputAction m_PlayerFP_Hotbarslot7;
    public struct PlayerFPActions
    {
        private @InputMaster m_Wrapper;
        public PlayerFPActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Interaction => m_Wrapper.m_PlayerFP_Interaction;
        public InputAction @Drop => m_Wrapper.m_PlayerFP_Drop;
        public InputAction @MainAction => m_Wrapper.m_PlayerFP_MainAction;
        public InputAction @HotbarslotChange => m_Wrapper.m_PlayerFP_HotbarslotChange;
        public InputAction @Hotbarslot1 => m_Wrapper.m_PlayerFP_Hotbarslot1;
        public InputAction @Hotbarslot2 => m_Wrapper.m_PlayerFP_Hotbarslot2;
        public InputAction @Hotbarslot3 => m_Wrapper.m_PlayerFP_Hotbarslot3;
        public InputAction @Hotbarslot4 => m_Wrapper.m_PlayerFP_Hotbarslot4;
        public InputAction @Hotbarslot5 => m_Wrapper.m_PlayerFP_Hotbarslot5;
        public InputAction @Hotbarslot6 => m_Wrapper.m_PlayerFP_Hotbarslot6;
        public InputAction @Hotbarslot7 => m_Wrapper.m_PlayerFP_Hotbarslot7;
        public InputActionMap Get() { return m_Wrapper.m_PlayerFP; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerFPActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerFPActions instance)
        {
            if (m_Wrapper.m_PlayerFPActionsCallbackInterface != null)
            {
                @Interaction.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnInteraction;
                @Interaction.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnInteraction;
                @Interaction.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnInteraction;
                @Drop.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnDrop;
                @Drop.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnDrop;
                @Drop.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnDrop;
                @MainAction.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnMainAction;
                @MainAction.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnMainAction;
                @MainAction.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnMainAction;
                @HotbarslotChange.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslotChange;
                @HotbarslotChange.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslotChange;
                @HotbarslotChange.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslotChange;
                @Hotbarslot1.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot1;
                @Hotbarslot1.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot1;
                @Hotbarslot1.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot1;
                @Hotbarslot2.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot2;
                @Hotbarslot2.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot2;
                @Hotbarslot2.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot2;
                @Hotbarslot3.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot3;
                @Hotbarslot3.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot3;
                @Hotbarslot3.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot3;
                @Hotbarslot4.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot4;
                @Hotbarslot4.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot4;
                @Hotbarslot4.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot4;
                @Hotbarslot5.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot5;
                @Hotbarslot5.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot5;
                @Hotbarslot5.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot5;
                @Hotbarslot6.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot6;
                @Hotbarslot6.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot6;
                @Hotbarslot6.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot6;
                @Hotbarslot7.started -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot7;
                @Hotbarslot7.performed -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot7;
                @Hotbarslot7.canceled -= m_Wrapper.m_PlayerFPActionsCallbackInterface.OnHotbarslot7;
            }
            m_Wrapper.m_PlayerFPActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Interaction.started += instance.OnInteraction;
                @Interaction.performed += instance.OnInteraction;
                @Interaction.canceled += instance.OnInteraction;
                @Drop.started += instance.OnDrop;
                @Drop.performed += instance.OnDrop;
                @Drop.canceled += instance.OnDrop;
                @MainAction.started += instance.OnMainAction;
                @MainAction.performed += instance.OnMainAction;
                @MainAction.canceled += instance.OnMainAction;
                @HotbarslotChange.started += instance.OnHotbarslotChange;
                @HotbarslotChange.performed += instance.OnHotbarslotChange;
                @HotbarslotChange.canceled += instance.OnHotbarslotChange;
                @Hotbarslot1.started += instance.OnHotbarslot1;
                @Hotbarslot1.performed += instance.OnHotbarslot1;
                @Hotbarslot1.canceled += instance.OnHotbarslot1;
                @Hotbarslot2.started += instance.OnHotbarslot2;
                @Hotbarslot2.performed += instance.OnHotbarslot2;
                @Hotbarslot2.canceled += instance.OnHotbarslot2;
                @Hotbarslot3.started += instance.OnHotbarslot3;
                @Hotbarslot3.performed += instance.OnHotbarslot3;
                @Hotbarslot3.canceled += instance.OnHotbarslot3;
                @Hotbarslot4.started += instance.OnHotbarslot4;
                @Hotbarslot4.performed += instance.OnHotbarslot4;
                @Hotbarslot4.canceled += instance.OnHotbarslot4;
                @Hotbarslot5.started += instance.OnHotbarslot5;
                @Hotbarslot5.performed += instance.OnHotbarslot5;
                @Hotbarslot5.canceled += instance.OnHotbarslot5;
                @Hotbarslot6.started += instance.OnHotbarslot6;
                @Hotbarslot6.performed += instance.OnHotbarslot6;
                @Hotbarslot6.canceled += instance.OnHotbarslot6;
                @Hotbarslot7.started += instance.OnHotbarslot7;
                @Hotbarslot7.performed += instance.OnHotbarslot7;
                @Hotbarslot7.canceled += instance.OnHotbarslot7;
            }
        }
    }
    public PlayerFPActions @PlayerFP => new PlayerFPActions(this);

    // PlayerTP
    private readonly InputActionMap m_PlayerTP;
    private IPlayerTPActions m_PlayerTPActionsCallbackInterface;
    private readonly InputAction m_PlayerTP_Attack;
    private readonly InputAction m_PlayerTP_DrawBow;
    private readonly InputAction m_PlayerTP_HeavyAttack;
    public struct PlayerTPActions
    {
        private @InputMaster m_Wrapper;
        public PlayerTPActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Attack => m_Wrapper.m_PlayerTP_Attack;
        public InputAction @DrawBow => m_Wrapper.m_PlayerTP_DrawBow;
        public InputAction @HeavyAttack => m_Wrapper.m_PlayerTP_HeavyAttack;
        public InputActionMap Get() { return m_Wrapper.m_PlayerTP; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerTPActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerTPActions instance)
        {
            if (m_Wrapper.m_PlayerTPActionsCallbackInterface != null)
            {
                @Attack.started -= m_Wrapper.m_PlayerTPActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_PlayerTPActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_PlayerTPActionsCallbackInterface.OnAttack;
                @DrawBow.started -= m_Wrapper.m_PlayerTPActionsCallbackInterface.OnDrawBow;
                @DrawBow.performed -= m_Wrapper.m_PlayerTPActionsCallbackInterface.OnDrawBow;
                @DrawBow.canceled -= m_Wrapper.m_PlayerTPActionsCallbackInterface.OnDrawBow;
                @HeavyAttack.started -= m_Wrapper.m_PlayerTPActionsCallbackInterface.OnHeavyAttack;
                @HeavyAttack.performed -= m_Wrapper.m_PlayerTPActionsCallbackInterface.OnHeavyAttack;
                @HeavyAttack.canceled -= m_Wrapper.m_PlayerTPActionsCallbackInterface.OnHeavyAttack;
            }
            m_Wrapper.m_PlayerTPActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @DrawBow.started += instance.OnDrawBow;
                @DrawBow.performed += instance.OnDrawBow;
                @DrawBow.canceled += instance.OnDrawBow;
                @HeavyAttack.started += instance.OnHeavyAttack;
                @HeavyAttack.performed += instance.OnHeavyAttack;
                @HeavyAttack.canceled += instance.OnHeavyAttack;
            }
        }
    }
    public PlayerTPActions @PlayerTP => new PlayerTPActions(this);

    // Raft
    private readonly InputActionMap m_Raft;
    private IRaftActions m_RaftActionsCallbackInterface;
    private readonly InputAction m_Raft_ChangeValue;
    public struct RaftActions
    {
        private @InputMaster m_Wrapper;
        public RaftActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @ChangeValue => m_Wrapper.m_Raft_ChangeValue;
        public InputActionMap Get() { return m_Wrapper.m_Raft; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RaftActions set) { return set.Get(); }
        public void SetCallbacks(IRaftActions instance)
        {
            if (m_Wrapper.m_RaftActionsCallbackInterface != null)
            {
                @ChangeValue.started -= m_Wrapper.m_RaftActionsCallbackInterface.OnChangeValue;
                @ChangeValue.performed -= m_Wrapper.m_RaftActionsCallbackInterface.OnChangeValue;
                @ChangeValue.canceled -= m_Wrapper.m_RaftActionsCallbackInterface.OnChangeValue;
            }
            m_Wrapper.m_RaftActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ChangeValue.started += instance.OnChangeValue;
                @ChangeValue.performed += instance.OnChangeValue;
                @ChangeValue.canceled += instance.OnChangeValue;
            }
        }
    }
    public RaftActions @Raft => new RaftActions(this);

    // Menus
    private readonly InputActionMap m_Menus;
    private IMenusActions m_MenusActionsCallbackInterface;
    private readonly InputAction m_Menus_ToggleInventory;
    private readonly InputAction m_Menus_MousePosition;
    private readonly InputAction m_Menus_MouseClick;
    private readonly InputAction m_Menus_ExitSign;
    private readonly InputAction m_Menus_Escape;
    public struct MenusActions
    {
        private @InputMaster m_Wrapper;
        public MenusActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleInventory => m_Wrapper.m_Menus_ToggleInventory;
        public InputAction @MousePosition => m_Wrapper.m_Menus_MousePosition;
        public InputAction @MouseClick => m_Wrapper.m_Menus_MouseClick;
        public InputAction @ExitSign => m_Wrapper.m_Menus_ExitSign;
        public InputAction @Escape => m_Wrapper.m_Menus_Escape;
        public InputActionMap Get() { return m_Wrapper.m_Menus; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenusActions set) { return set.Get(); }
        public void SetCallbacks(IMenusActions instance)
        {
            if (m_Wrapper.m_MenusActionsCallbackInterface != null)
            {
                @ToggleInventory.started -= m_Wrapper.m_MenusActionsCallbackInterface.OnToggleInventory;
                @ToggleInventory.performed -= m_Wrapper.m_MenusActionsCallbackInterface.OnToggleInventory;
                @ToggleInventory.canceled -= m_Wrapper.m_MenusActionsCallbackInterface.OnToggleInventory;
                @MousePosition.started -= m_Wrapper.m_MenusActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_MenusActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_MenusActionsCallbackInterface.OnMousePosition;
                @MouseClick.started -= m_Wrapper.m_MenusActionsCallbackInterface.OnMouseClick;
                @MouseClick.performed -= m_Wrapper.m_MenusActionsCallbackInterface.OnMouseClick;
                @MouseClick.canceled -= m_Wrapper.m_MenusActionsCallbackInterface.OnMouseClick;
                @ExitSign.started -= m_Wrapper.m_MenusActionsCallbackInterface.OnExitSign;
                @ExitSign.performed -= m_Wrapper.m_MenusActionsCallbackInterface.OnExitSign;
                @ExitSign.canceled -= m_Wrapper.m_MenusActionsCallbackInterface.OnExitSign;
                @Escape.started -= m_Wrapper.m_MenusActionsCallbackInterface.OnEscape;
                @Escape.performed -= m_Wrapper.m_MenusActionsCallbackInterface.OnEscape;
                @Escape.canceled -= m_Wrapper.m_MenusActionsCallbackInterface.OnEscape;
            }
            m_Wrapper.m_MenusActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ToggleInventory.started += instance.OnToggleInventory;
                @ToggleInventory.performed += instance.OnToggleInventory;
                @ToggleInventory.canceled += instance.OnToggleInventory;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @MouseClick.started += instance.OnMouseClick;
                @MouseClick.performed += instance.OnMouseClick;
                @MouseClick.canceled += instance.OnMouseClick;
                @ExitSign.started += instance.OnExitSign;
                @ExitSign.performed += instance.OnExitSign;
                @ExitSign.canceled += instance.OnExitSign;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
            }
        }
    }
    public MenusActions @Menus => new MenusActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private IDebugActions m_DebugActionsCallbackInterface;
    private readonly InputAction m_Debug_Open;
    private readonly InputAction m_Debug_AutoComplete;
    private readonly InputAction m_Debug_LoadCommand;
    private readonly InputAction m_Debug_HideHUD;
    private readonly InputAction m_Debug_Newaction;
    public struct DebugActions
    {
        private @InputMaster m_Wrapper;
        public DebugActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Open => m_Wrapper.m_Debug_Open;
        public InputAction @AutoComplete => m_Wrapper.m_Debug_AutoComplete;
        public InputAction @LoadCommand => m_Wrapper.m_Debug_LoadCommand;
        public InputAction @HideHUD => m_Wrapper.m_Debug_HideHUD;
        public InputAction @Newaction => m_Wrapper.m_Debug_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void SetCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterface != null)
            {
                @Open.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnOpen;
                @Open.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnOpen;
                @Open.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnOpen;
                @AutoComplete.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnAutoComplete;
                @AutoComplete.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnAutoComplete;
                @AutoComplete.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnAutoComplete;
                @LoadCommand.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnLoadCommand;
                @LoadCommand.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnLoadCommand;
                @LoadCommand.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnLoadCommand;
                @HideHUD.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnHideHUD;
                @HideHUD.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnHideHUD;
                @HideHUD.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnHideHUD;
                @Newaction.started -= m_Wrapper.m_DebugActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_DebugActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_DebugActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_DebugActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Open.started += instance.OnOpen;
                @Open.performed += instance.OnOpen;
                @Open.canceled += instance.OnOpen;
                @AutoComplete.started += instance.OnAutoComplete;
                @AutoComplete.performed += instance.OnAutoComplete;
                @AutoComplete.canceled += instance.OnAutoComplete;
                @LoadCommand.started += instance.OnLoadCommand;
                @LoadCommand.performed += instance.OnLoadCommand;
                @LoadCommand.canceled += instance.OnLoadCommand;
                @HideHUD.started += instance.OnHideHUD;
                @HideHUD.performed += instance.OnHideHUD;
                @HideHUD.canceled += instance.OnHideHUD;
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public DebugActions @Debug => new DebugActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard/Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnView(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRunning(InputAction.CallbackContext context);
        void OnChangeMode(InputAction.CallbackContext context);
    }
    public interface IPlayerFPActions
    {
        void OnInteraction(InputAction.CallbackContext context);
        void OnDrop(InputAction.CallbackContext context);
        void OnMainAction(InputAction.CallbackContext context);
        void OnHotbarslotChange(InputAction.CallbackContext context);
        void OnHotbarslot1(InputAction.CallbackContext context);
        void OnHotbarslot2(InputAction.CallbackContext context);
        void OnHotbarslot3(InputAction.CallbackContext context);
        void OnHotbarslot4(InputAction.CallbackContext context);
        void OnHotbarslot5(InputAction.CallbackContext context);
        void OnHotbarslot6(InputAction.CallbackContext context);
        void OnHotbarslot7(InputAction.CallbackContext context);
    }
    public interface IPlayerTPActions
    {
        void OnAttack(InputAction.CallbackContext context);
        void OnDrawBow(InputAction.CallbackContext context);
        void OnHeavyAttack(InputAction.CallbackContext context);
    }
    public interface IRaftActions
    {
        void OnChangeValue(InputAction.CallbackContext context);
    }
    public interface IMenusActions
    {
        void OnToggleInventory(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseClick(InputAction.CallbackContext context);
        void OnExitSign(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnOpen(InputAction.CallbackContext context);
        void OnAutoComplete(InputAction.CallbackContext context);
        void OnLoadCommand(InputAction.CallbackContext context);
        void OnHideHUD(InputAction.CallbackContext context);
        void OnNewaction(InputAction.CallbackContext context);
    }
}
