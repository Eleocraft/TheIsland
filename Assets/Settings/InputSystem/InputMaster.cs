//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Settings/InputSystem/InputMaster.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaster: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMaster"",
    ""maps"": [
        {
            ""name"": ""Mouse"",
            ""id"": ""40e61be7-0382-4acb-96f0-6202e4ce939c"",
            ""actions"": [
                {
                    ""name"": ""View"",
                    ""type"": ""Value"",
                    ""id"": ""dc44a54b-c127-454a-bcca-95760957ed04"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MainAction"",
                    ""type"": ""Button"",
                    ""id"": ""ef927fab-fcac-4581-9cb5-1c5aac3d8939"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryAction"",
                    ""type"": ""Button"",
                    ""id"": ""db332ec5-c910-4036-aee2-3ba171a2ed19"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HotbarslotChange"",
                    ""type"": ""Value"",
                    ""id"": ""a1cc96fe-7e08-4459-8f8f-8af9c5fbe7bc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TertiaryAction"",
                    ""type"": ""Button"",
                    ""id"": ""de5cece3-c8cb-4e0f-a9eb-532fcf72f68e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a5eb59bc-4d15-4cf1-827b-0ebb718f985d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""View"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9712a8db-9edb-4c3c-8f16-748565f5a378"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""View"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MouseLook"",
                    ""id"": ""f71676df-d5fd-494c-93e5-2076d90711a3"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""View"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""2a2b5f3f-ba2a-4fbe-ad23-2d38f070478e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""View"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9d32985b-56a5-4d9f-ba55-06f6f5321cb5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""View"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7074da78-6137-46b4-ae22-491d3dbce7e0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81a2aa0e-222d-4ebf-8685-1870e232b6bf"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MainAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02176dd2-92db-43e6-bba9-0292a581ddba"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""SecondaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8815500d-21ad-4259-a4b2-6e63031d4fc6"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""HotbarslotChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4655dda-6644-4ffd-8922-2b84075b54ca"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""TertiaryAction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player"",
            ""id"": ""bb2bf03d-b09a-49e6-9747-296afdd0b3c4"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""85188bcb-0616-4af6-bec2-ef74f295090e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""684b8c32-3200-49ee-8f6c-59032cef3ec9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CastMagic"",
                    ""type"": ""Button"",
                    ""id"": ""58486a53-464d-4dc9-a738-f8f8bcda11c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Running"",
                    ""type"": ""Button"",
                    ""id"": ""06b16ca3-f2c0-4943-978b-c9c81828e499"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Drop"",
                    ""type"": ""Button"",
                    ""id"": ""ce86ea07-4bfb-496c-b06d-7ebc00a7f3f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot1"",
                    ""type"": ""Button"",
                    ""id"": ""9add3451-dee1-44e0-95f0-57d7fcb46f05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot2"",
                    ""type"": ""Button"",
                    ""id"": ""4bfb31c6-8199-454b-b2c9-074621cd52be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot3"",
                    ""type"": ""Button"",
                    ""id"": ""c8b62323-c361-47a9-951c-935c28af40c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot4"",
                    ""type"": ""Button"",
                    ""id"": ""5851c3e6-faf0-436b-8839-7bf25738c7ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot5"",
                    ""type"": ""Button"",
                    ""id"": ""17584dbc-624d-4610-9bb0-9f63a0781367"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot6"",
                    ""type"": ""Button"",
                    ""id"": ""2b4fb00d-f43b-4c65-90ee-7ae470f8bd00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbarslot7"",
                    ""type"": ""Button"",
                    ""id"": ""52cff4d4-082a-4182-9ae4-aa49ea3ba4eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""777992cd-0e2d-4427-a8ab-e3fb6acf9a9a"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""c4e611a8-f0db-4de2-85d4-2b3242fb211c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dc05ee21-8e2b-4683-a6e0-56da288b6f6e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""33ebcf53-dabc-4814-8179-cf6764566df9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8e5045c2-8ac0-47fb-9abf-8b98ede3772b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2e3d3f4b-a548-4a67-aa85-3e2aba50ffda"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3b4e4824-4ead-4ba0-89d6-53cf97a103d5"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8e7a3dc-8a25-4974-b699-cebb576576a0"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76aad2a5-caf2-45c5-b6bd-b7d74a4097cf"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05b1f496-c8f6-43c8-ae9e-493632473a3f"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Running"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b98d4d39-9056-4334-b375-bc94aa3c1340"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73986139-04ad-44e4-a368-1e6c609f65bb"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Drop"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc79f1a1-d7db-4279-9130-e6e5d02dccc0"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84517761-dc26-4acc-bc9a-38edc962b53a"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c7dabed-3eac-442f-827e-4b8ddc5e0c66"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ee8dda4-4610-49f6-a9b1-80cf6aa0281c"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""579b2bc7-8a9c-4a77-ac0a-678823f18387"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11930b53-73b0-4e22-a3cd-5037114bce0a"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f8362133-d3c6-43f5-8744-67dd716629fc"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Hotbarslot7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66d80b09-99d0-42e8-8511-32257ce8e4ca"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""CastMagic"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Interaction"",
            ""id"": ""15f383df-4a31-4bc6-8fcf-ec615a3f7abc"",
            ""actions"": [
                {
                    ""name"": ""MainInteraction"",
                    ""type"": ""Button"",
                    ""id"": ""89e58c64-48d1-4dc7-a076-c34ddcf5e872"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryInteraction"",
                    ""type"": ""Button"",
                    ""id"": ""82af9d1d-1ca7-4ca4-84c5-9d5d5250c716"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c19a3e4d-b574-4045-a6ab-add427580f5c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""MainInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""502585f8-ea40-4543-a646-11a9c58c10fb"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MainInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6ae849d-aa57-4da4-88fd-267c40512026"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""SecondaryInteraction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Raft"",
            ""id"": ""0beef566-9811-478f-9374-d39a250aa75e"",
            ""actions"": [
                {
                    ""name"": ""ChangeValue"",
                    ""type"": ""Value"",
                    ""id"": ""5757f4f5-5116-4cdd-be4e-576bd027180d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cb5ae268-e2c9-4e27-813c-4e2bc9313c35"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""025bf7d1-d55c-4afa-a25b-74ac98778f3f"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""MouseLook"",
                    ""id"": ""63378f29-875f-4df3-a565-7ea67f3743e2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""id"": ""39f79362-7f5a-459c-bd99-04fff75ad7f4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""e6058dfd-1fb8-41e9-b018-1981e63ac940"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ChangeValue"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menus"",
            ""id"": ""f0ca63c3-db6a-40d9-a82e-7c6c1e69fea4"",
            ""actions"": [
                {
                    ""name"": ""ToggleInventory"",
                    ""type"": ""Button"",
                    ""id"": ""749f5997-2d5e-4111-936b-59a2a8d44887"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""11431a69-055e-4368-8ca9-280f646edf55"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""dbfdd532-598e-4bae-8eca-3477fccd1fb6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ExitSign"",
                    ""type"": ""Button"",
                    ""id"": ""f7fdf149-198b-4320-beee-e0b2608d6604"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""a40a69aa-8fe8-4add-aa65-57ba66331baa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4bd7b695-5cfc-4fd0-8627-05db3ef1e42f"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""ToggleInventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e7980238-6f5e-43c2-bf1b-3d22c1915861"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16d5a9b5-ab46-457e-b90e-aa129e954857"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""MouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f94185cb-02e0-46bf-a716-a45cf18997af"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitSign"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb6061a7-88fb-4a00-8648-15fad642ed79"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitSign"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cee9ac2f-e672-425f-a411-22a8e12f7ea0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitSign"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e368ee27-2f0d-4bb6-8143-b8621527e1a6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ExitSign"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7b1e050-bea8-42c2-9390-4b8c16e123ae"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debug"",
            ""id"": ""8db3160d-85e8-4c5c-8a9e-aa89e04deddc"",
            ""actions"": [
                {
                    ""name"": ""Open"",
                    ""type"": ""Button"",
                    ""id"": ""48b886b4-ce83-4fe9-b9c0-fb54cbc317d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AutoComplete"",
                    ""type"": ""Button"",
                    ""id"": ""83936f65-9248-467c-9ecd-9b86c6fde105"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LoadCommand"",
                    ""type"": ""Button"",
                    ""id"": ""0dce81a7-ec7a-48f0-acdd-52652a3936fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HideHUD"",
                    ""type"": ""Button"",
                    ""id"": ""f018d030-26ad-48e5-bd77-fc4a268456e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""1525c1ad-bc2c-4b7e-94ca-4787805d6db2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6a207e68-f2d8-4b02-b6d8-235190e94a63"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""Open"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""510eaf1e-50a3-4280-8d55-4c7ed1b4e10a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""LoadCommand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e4ea3f5f-efb3-48f3-8a95-6d652681275e"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""HideHUD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""107e0dbf-ca72-4dc3-986e-066a77f16edd"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54fb3169-c441-4c57-8b67-b7c76c46ea04"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard/Mouse"",
                    ""action"": ""AutoComplete"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard/Mouse"",
            ""bindingGroup"": ""Keyboard/Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Mouse
        m_Mouse = asset.FindActionMap("Mouse", throwIfNotFound: true);
        m_Mouse_View = m_Mouse.FindAction("View", throwIfNotFound: true);
        m_Mouse_MainAction = m_Mouse.FindAction("MainAction", throwIfNotFound: true);
        m_Mouse_SecondaryAction = m_Mouse.FindAction("SecondaryAction", throwIfNotFound: true);
        m_Mouse_HotbarslotChange = m_Mouse.FindAction("HotbarslotChange", throwIfNotFound: true);
        m_Mouse_TertiaryAction = m_Mouse.FindAction("TertiaryAction", throwIfNotFound: true);
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_CastMagic = m_Player.FindAction("CastMagic", throwIfNotFound: true);
        m_Player_Running = m_Player.FindAction("Running", throwIfNotFound: true);
        m_Player_Drop = m_Player.FindAction("Drop", throwIfNotFound: true);
        m_Player_Hotbarslot1 = m_Player.FindAction("Hotbarslot1", throwIfNotFound: true);
        m_Player_Hotbarslot2 = m_Player.FindAction("Hotbarslot2", throwIfNotFound: true);
        m_Player_Hotbarslot3 = m_Player.FindAction("Hotbarslot3", throwIfNotFound: true);
        m_Player_Hotbarslot4 = m_Player.FindAction("Hotbarslot4", throwIfNotFound: true);
        m_Player_Hotbarslot5 = m_Player.FindAction("Hotbarslot5", throwIfNotFound: true);
        m_Player_Hotbarslot6 = m_Player.FindAction("Hotbarslot6", throwIfNotFound: true);
        m_Player_Hotbarslot7 = m_Player.FindAction("Hotbarslot7", throwIfNotFound: true);
        // Interaction
        m_Interaction = asset.FindActionMap("Interaction", throwIfNotFound: true);
        m_Interaction_MainInteraction = m_Interaction.FindAction("MainInteraction", throwIfNotFound: true);
        m_Interaction_SecondaryInteraction = m_Interaction.FindAction("SecondaryInteraction", throwIfNotFound: true);
        // Raft
        m_Raft = asset.FindActionMap("Raft", throwIfNotFound: true);
        m_Raft_ChangeValue = m_Raft.FindAction("ChangeValue", throwIfNotFound: true);
        // Menus
        m_Menus = asset.FindActionMap("Menus", throwIfNotFound: true);
        m_Menus_ToggleInventory = m_Menus.FindAction("ToggleInventory", throwIfNotFound: true);
        m_Menus_MousePosition = m_Menus.FindAction("MousePosition", throwIfNotFound: true);
        m_Menus_MouseClick = m_Menus.FindAction("MouseClick", throwIfNotFound: true);
        m_Menus_ExitSign = m_Menus.FindAction("ExitSign", throwIfNotFound: true);
        m_Menus_Escape = m_Menus.FindAction("Escape", throwIfNotFound: true);
        // Debug
        m_Debug = asset.FindActionMap("Debug", throwIfNotFound: true);
        m_Debug_Open = m_Debug.FindAction("Open", throwIfNotFound: true);
        m_Debug_AutoComplete = m_Debug.FindAction("AutoComplete", throwIfNotFound: true);
        m_Debug_LoadCommand = m_Debug.FindAction("LoadCommand", throwIfNotFound: true);
        m_Debug_HideHUD = m_Debug.FindAction("HideHUD", throwIfNotFound: true);
        m_Debug_Newaction = m_Debug.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Mouse
    private readonly InputActionMap m_Mouse;
    private List<IMouseActions> m_MouseActionsCallbackInterfaces = new List<IMouseActions>();
    private readonly InputAction m_Mouse_View;
    private readonly InputAction m_Mouse_MainAction;
    private readonly InputAction m_Mouse_SecondaryAction;
    private readonly InputAction m_Mouse_HotbarslotChange;
    private readonly InputAction m_Mouse_TertiaryAction;
    public struct MouseActions
    {
        private @InputMaster m_Wrapper;
        public MouseActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @View => m_Wrapper.m_Mouse_View;
        public InputAction @MainAction => m_Wrapper.m_Mouse_MainAction;
        public InputAction @SecondaryAction => m_Wrapper.m_Mouse_SecondaryAction;
        public InputAction @HotbarslotChange => m_Wrapper.m_Mouse_HotbarslotChange;
        public InputAction @TertiaryAction => m_Wrapper.m_Mouse_TertiaryAction;
        public InputActionMap Get() { return m_Wrapper.m_Mouse; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MouseActions set) { return set.Get(); }
        public void AddCallbacks(IMouseActions instance)
        {
            if (instance == null || m_Wrapper.m_MouseActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MouseActionsCallbackInterfaces.Add(instance);
            @View.started += instance.OnView;
            @View.performed += instance.OnView;
            @View.canceled += instance.OnView;
            @MainAction.started += instance.OnMainAction;
            @MainAction.performed += instance.OnMainAction;
            @MainAction.canceled += instance.OnMainAction;
            @SecondaryAction.started += instance.OnSecondaryAction;
            @SecondaryAction.performed += instance.OnSecondaryAction;
            @SecondaryAction.canceled += instance.OnSecondaryAction;
            @HotbarslotChange.started += instance.OnHotbarslotChange;
            @HotbarslotChange.performed += instance.OnHotbarslotChange;
            @HotbarslotChange.canceled += instance.OnHotbarslotChange;
            @TertiaryAction.started += instance.OnTertiaryAction;
            @TertiaryAction.performed += instance.OnTertiaryAction;
            @TertiaryAction.canceled += instance.OnTertiaryAction;
        }

        private void UnregisterCallbacks(IMouseActions instance)
        {
            @View.started -= instance.OnView;
            @View.performed -= instance.OnView;
            @View.canceled -= instance.OnView;
            @MainAction.started -= instance.OnMainAction;
            @MainAction.performed -= instance.OnMainAction;
            @MainAction.canceled -= instance.OnMainAction;
            @SecondaryAction.started -= instance.OnSecondaryAction;
            @SecondaryAction.performed -= instance.OnSecondaryAction;
            @SecondaryAction.canceled -= instance.OnSecondaryAction;
            @HotbarslotChange.started -= instance.OnHotbarslotChange;
            @HotbarslotChange.performed -= instance.OnHotbarslotChange;
            @HotbarslotChange.canceled -= instance.OnHotbarslotChange;
            @TertiaryAction.started -= instance.OnTertiaryAction;
            @TertiaryAction.performed -= instance.OnTertiaryAction;
            @TertiaryAction.canceled -= instance.OnTertiaryAction;
        }

        public void RemoveCallbacks(IMouseActions instance)
        {
            if (m_Wrapper.m_MouseActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMouseActions instance)
        {
            foreach (var item in m_Wrapper.m_MouseActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MouseActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MouseActions @Mouse => new MouseActions(this);

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_CastMagic;
    private readonly InputAction m_Player_Running;
    private readonly InputAction m_Player_Drop;
    private readonly InputAction m_Player_Hotbarslot1;
    private readonly InputAction m_Player_Hotbarslot2;
    private readonly InputAction m_Player_Hotbarslot3;
    private readonly InputAction m_Player_Hotbarslot4;
    private readonly InputAction m_Player_Hotbarslot5;
    private readonly InputAction m_Player_Hotbarslot6;
    private readonly InputAction m_Player_Hotbarslot7;
    public struct PlayerActions
    {
        private @InputMaster m_Wrapper;
        public PlayerActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @CastMagic => m_Wrapper.m_Player_CastMagic;
        public InputAction @Running => m_Wrapper.m_Player_Running;
        public InputAction @Drop => m_Wrapper.m_Player_Drop;
        public InputAction @Hotbarslot1 => m_Wrapper.m_Player_Hotbarslot1;
        public InputAction @Hotbarslot2 => m_Wrapper.m_Player_Hotbarslot2;
        public InputAction @Hotbarslot3 => m_Wrapper.m_Player_Hotbarslot3;
        public InputAction @Hotbarslot4 => m_Wrapper.m_Player_Hotbarslot4;
        public InputAction @Hotbarslot5 => m_Wrapper.m_Player_Hotbarslot5;
        public InputAction @Hotbarslot6 => m_Wrapper.m_Player_Hotbarslot6;
        public InputAction @Hotbarslot7 => m_Wrapper.m_Player_Hotbarslot7;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @CastMagic.started += instance.OnCastMagic;
            @CastMagic.performed += instance.OnCastMagic;
            @CastMagic.canceled += instance.OnCastMagic;
            @Running.started += instance.OnRunning;
            @Running.performed += instance.OnRunning;
            @Running.canceled += instance.OnRunning;
            @Drop.started += instance.OnDrop;
            @Drop.performed += instance.OnDrop;
            @Drop.canceled += instance.OnDrop;
            @Hotbarslot1.started += instance.OnHotbarslot1;
            @Hotbarslot1.performed += instance.OnHotbarslot1;
            @Hotbarslot1.canceled += instance.OnHotbarslot1;
            @Hotbarslot2.started += instance.OnHotbarslot2;
            @Hotbarslot2.performed += instance.OnHotbarslot2;
            @Hotbarslot2.canceled += instance.OnHotbarslot2;
            @Hotbarslot3.started += instance.OnHotbarslot3;
            @Hotbarslot3.performed += instance.OnHotbarslot3;
            @Hotbarslot3.canceled += instance.OnHotbarslot3;
            @Hotbarslot4.started += instance.OnHotbarslot4;
            @Hotbarslot4.performed += instance.OnHotbarslot4;
            @Hotbarslot4.canceled += instance.OnHotbarslot4;
            @Hotbarslot5.started += instance.OnHotbarslot5;
            @Hotbarslot5.performed += instance.OnHotbarslot5;
            @Hotbarslot5.canceled += instance.OnHotbarslot5;
            @Hotbarslot6.started += instance.OnHotbarslot6;
            @Hotbarslot6.performed += instance.OnHotbarslot6;
            @Hotbarslot6.canceled += instance.OnHotbarslot6;
            @Hotbarslot7.started += instance.OnHotbarslot7;
            @Hotbarslot7.performed += instance.OnHotbarslot7;
            @Hotbarslot7.canceled += instance.OnHotbarslot7;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @CastMagic.started -= instance.OnCastMagic;
            @CastMagic.performed -= instance.OnCastMagic;
            @CastMagic.canceled -= instance.OnCastMagic;
            @Running.started -= instance.OnRunning;
            @Running.performed -= instance.OnRunning;
            @Running.canceled -= instance.OnRunning;
            @Drop.started -= instance.OnDrop;
            @Drop.performed -= instance.OnDrop;
            @Drop.canceled -= instance.OnDrop;
            @Hotbarslot1.started -= instance.OnHotbarslot1;
            @Hotbarslot1.performed -= instance.OnHotbarslot1;
            @Hotbarslot1.canceled -= instance.OnHotbarslot1;
            @Hotbarslot2.started -= instance.OnHotbarslot2;
            @Hotbarslot2.performed -= instance.OnHotbarslot2;
            @Hotbarslot2.canceled -= instance.OnHotbarslot2;
            @Hotbarslot3.started -= instance.OnHotbarslot3;
            @Hotbarslot3.performed -= instance.OnHotbarslot3;
            @Hotbarslot3.canceled -= instance.OnHotbarslot3;
            @Hotbarslot4.started -= instance.OnHotbarslot4;
            @Hotbarslot4.performed -= instance.OnHotbarslot4;
            @Hotbarslot4.canceled -= instance.OnHotbarslot4;
            @Hotbarslot5.started -= instance.OnHotbarslot5;
            @Hotbarslot5.performed -= instance.OnHotbarslot5;
            @Hotbarslot5.canceled -= instance.OnHotbarslot5;
            @Hotbarslot6.started -= instance.OnHotbarslot6;
            @Hotbarslot6.performed -= instance.OnHotbarslot6;
            @Hotbarslot6.canceled -= instance.OnHotbarslot6;
            @Hotbarslot7.started -= instance.OnHotbarslot7;
            @Hotbarslot7.performed -= instance.OnHotbarslot7;
            @Hotbarslot7.canceled -= instance.OnHotbarslot7;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Interaction
    private readonly InputActionMap m_Interaction;
    private List<IInteractionActions> m_InteractionActionsCallbackInterfaces = new List<IInteractionActions>();
    private readonly InputAction m_Interaction_MainInteraction;
    private readonly InputAction m_Interaction_SecondaryInteraction;
    public struct InteractionActions
    {
        private @InputMaster m_Wrapper;
        public InteractionActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @MainInteraction => m_Wrapper.m_Interaction_MainInteraction;
        public InputAction @SecondaryInteraction => m_Wrapper.m_Interaction_SecondaryInteraction;
        public InputActionMap Get() { return m_Wrapper.m_Interaction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteractionActions set) { return set.Get(); }
        public void AddCallbacks(IInteractionActions instance)
        {
            if (instance == null || m_Wrapper.m_InteractionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_InteractionActionsCallbackInterfaces.Add(instance);
            @MainInteraction.started += instance.OnMainInteraction;
            @MainInteraction.performed += instance.OnMainInteraction;
            @MainInteraction.canceled += instance.OnMainInteraction;
            @SecondaryInteraction.started += instance.OnSecondaryInteraction;
            @SecondaryInteraction.performed += instance.OnSecondaryInteraction;
            @SecondaryInteraction.canceled += instance.OnSecondaryInteraction;
        }

        private void UnregisterCallbacks(IInteractionActions instance)
        {
            @MainInteraction.started -= instance.OnMainInteraction;
            @MainInteraction.performed -= instance.OnMainInteraction;
            @MainInteraction.canceled -= instance.OnMainInteraction;
            @SecondaryInteraction.started -= instance.OnSecondaryInteraction;
            @SecondaryInteraction.performed -= instance.OnSecondaryInteraction;
            @SecondaryInteraction.canceled -= instance.OnSecondaryInteraction;
        }

        public void RemoveCallbacks(IInteractionActions instance)
        {
            if (m_Wrapper.m_InteractionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IInteractionActions instance)
        {
            foreach (var item in m_Wrapper.m_InteractionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_InteractionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public InteractionActions @Interaction => new InteractionActions(this);

    // Raft
    private readonly InputActionMap m_Raft;
    private List<IRaftActions> m_RaftActionsCallbackInterfaces = new List<IRaftActions>();
    private readonly InputAction m_Raft_ChangeValue;
    public struct RaftActions
    {
        private @InputMaster m_Wrapper;
        public RaftActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @ChangeValue => m_Wrapper.m_Raft_ChangeValue;
        public InputActionMap Get() { return m_Wrapper.m_Raft; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RaftActions set) { return set.Get(); }
        public void AddCallbacks(IRaftActions instance)
        {
            if (instance == null || m_Wrapper.m_RaftActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RaftActionsCallbackInterfaces.Add(instance);
            @ChangeValue.started += instance.OnChangeValue;
            @ChangeValue.performed += instance.OnChangeValue;
            @ChangeValue.canceled += instance.OnChangeValue;
        }

        private void UnregisterCallbacks(IRaftActions instance)
        {
            @ChangeValue.started -= instance.OnChangeValue;
            @ChangeValue.performed -= instance.OnChangeValue;
            @ChangeValue.canceled -= instance.OnChangeValue;
        }

        public void RemoveCallbacks(IRaftActions instance)
        {
            if (m_Wrapper.m_RaftActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRaftActions instance)
        {
            foreach (var item in m_Wrapper.m_RaftActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RaftActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RaftActions @Raft => new RaftActions(this);

    // Menus
    private readonly InputActionMap m_Menus;
    private List<IMenusActions> m_MenusActionsCallbackInterfaces = new List<IMenusActions>();
    private readonly InputAction m_Menus_ToggleInventory;
    private readonly InputAction m_Menus_MousePosition;
    private readonly InputAction m_Menus_MouseClick;
    private readonly InputAction m_Menus_ExitSign;
    private readonly InputAction m_Menus_Escape;
    public struct MenusActions
    {
        private @InputMaster m_Wrapper;
        public MenusActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleInventory => m_Wrapper.m_Menus_ToggleInventory;
        public InputAction @MousePosition => m_Wrapper.m_Menus_MousePosition;
        public InputAction @MouseClick => m_Wrapper.m_Menus_MouseClick;
        public InputAction @ExitSign => m_Wrapper.m_Menus_ExitSign;
        public InputAction @Escape => m_Wrapper.m_Menus_Escape;
        public InputActionMap Get() { return m_Wrapper.m_Menus; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenusActions set) { return set.Get(); }
        public void AddCallbacks(IMenusActions instance)
        {
            if (instance == null || m_Wrapper.m_MenusActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MenusActionsCallbackInterfaces.Add(instance);
            @ToggleInventory.started += instance.OnToggleInventory;
            @ToggleInventory.performed += instance.OnToggleInventory;
            @ToggleInventory.canceled += instance.OnToggleInventory;
            @MousePosition.started += instance.OnMousePosition;
            @MousePosition.performed += instance.OnMousePosition;
            @MousePosition.canceled += instance.OnMousePosition;
            @MouseClick.started += instance.OnMouseClick;
            @MouseClick.performed += instance.OnMouseClick;
            @MouseClick.canceled += instance.OnMouseClick;
            @ExitSign.started += instance.OnExitSign;
            @ExitSign.performed += instance.OnExitSign;
            @ExitSign.canceled += instance.OnExitSign;
            @Escape.started += instance.OnEscape;
            @Escape.performed += instance.OnEscape;
            @Escape.canceled += instance.OnEscape;
        }

        private void UnregisterCallbacks(IMenusActions instance)
        {
            @ToggleInventory.started -= instance.OnToggleInventory;
            @ToggleInventory.performed -= instance.OnToggleInventory;
            @ToggleInventory.canceled -= instance.OnToggleInventory;
            @MousePosition.started -= instance.OnMousePosition;
            @MousePosition.performed -= instance.OnMousePosition;
            @MousePosition.canceled -= instance.OnMousePosition;
            @MouseClick.started -= instance.OnMouseClick;
            @MouseClick.performed -= instance.OnMouseClick;
            @MouseClick.canceled -= instance.OnMouseClick;
            @ExitSign.started -= instance.OnExitSign;
            @ExitSign.performed -= instance.OnExitSign;
            @ExitSign.canceled -= instance.OnExitSign;
            @Escape.started -= instance.OnEscape;
            @Escape.performed -= instance.OnEscape;
            @Escape.canceled -= instance.OnEscape;
        }

        public void RemoveCallbacks(IMenusActions instance)
        {
            if (m_Wrapper.m_MenusActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMenusActions instance)
        {
            foreach (var item in m_Wrapper.m_MenusActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MenusActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MenusActions @Menus => new MenusActions(this);

    // Debug
    private readonly InputActionMap m_Debug;
    private List<IDebugActions> m_DebugActionsCallbackInterfaces = new List<IDebugActions>();
    private readonly InputAction m_Debug_Open;
    private readonly InputAction m_Debug_AutoComplete;
    private readonly InputAction m_Debug_LoadCommand;
    private readonly InputAction m_Debug_HideHUD;
    private readonly InputAction m_Debug_Newaction;
    public struct DebugActions
    {
        private @InputMaster m_Wrapper;
        public DebugActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @Open => m_Wrapper.m_Debug_Open;
        public InputAction @AutoComplete => m_Wrapper.m_Debug_AutoComplete;
        public InputAction @LoadCommand => m_Wrapper.m_Debug_LoadCommand;
        public InputAction @HideHUD => m_Wrapper.m_Debug_HideHUD;
        public InputAction @Newaction => m_Wrapper.m_Debug_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Debug; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebugActions set) { return set.Get(); }
        public void AddCallbacks(IDebugActions instance)
        {
            if (instance == null || m_Wrapper.m_DebugActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_DebugActionsCallbackInterfaces.Add(instance);
            @Open.started += instance.OnOpen;
            @Open.performed += instance.OnOpen;
            @Open.canceled += instance.OnOpen;
            @AutoComplete.started += instance.OnAutoComplete;
            @AutoComplete.performed += instance.OnAutoComplete;
            @AutoComplete.canceled += instance.OnAutoComplete;
            @LoadCommand.started += instance.OnLoadCommand;
            @LoadCommand.performed += instance.OnLoadCommand;
            @LoadCommand.canceled += instance.OnLoadCommand;
            @HideHUD.started += instance.OnHideHUD;
            @HideHUD.performed += instance.OnHideHUD;
            @HideHUD.canceled += instance.OnHideHUD;
            @Newaction.started += instance.OnNewaction;
            @Newaction.performed += instance.OnNewaction;
            @Newaction.canceled += instance.OnNewaction;
        }

        private void UnregisterCallbacks(IDebugActions instance)
        {
            @Open.started -= instance.OnOpen;
            @Open.performed -= instance.OnOpen;
            @Open.canceled -= instance.OnOpen;
            @AutoComplete.started -= instance.OnAutoComplete;
            @AutoComplete.performed -= instance.OnAutoComplete;
            @AutoComplete.canceled -= instance.OnAutoComplete;
            @LoadCommand.started -= instance.OnLoadCommand;
            @LoadCommand.performed -= instance.OnLoadCommand;
            @LoadCommand.canceled -= instance.OnLoadCommand;
            @HideHUD.started -= instance.OnHideHUD;
            @HideHUD.performed -= instance.OnHideHUD;
            @HideHUD.canceled -= instance.OnHideHUD;
            @Newaction.started -= instance.OnNewaction;
            @Newaction.performed -= instance.OnNewaction;
            @Newaction.canceled -= instance.OnNewaction;
        }

        public void RemoveCallbacks(IDebugActions instance)
        {
            if (m_Wrapper.m_DebugActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IDebugActions instance)
        {
            foreach (var item in m_Wrapper.m_DebugActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_DebugActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public DebugActions @Debug => new DebugActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard/Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IMouseActions
    {
        void OnView(InputAction.CallbackContext context);
        void OnMainAction(InputAction.CallbackContext context);
        void OnSecondaryAction(InputAction.CallbackContext context);
        void OnHotbarslotChange(InputAction.CallbackContext context);
        void OnTertiaryAction(InputAction.CallbackContext context);
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnCastMagic(InputAction.CallbackContext context);
        void OnRunning(InputAction.CallbackContext context);
        void OnDrop(InputAction.CallbackContext context);
        void OnHotbarslot1(InputAction.CallbackContext context);
        void OnHotbarslot2(InputAction.CallbackContext context);
        void OnHotbarslot3(InputAction.CallbackContext context);
        void OnHotbarslot4(InputAction.CallbackContext context);
        void OnHotbarslot5(InputAction.CallbackContext context);
        void OnHotbarslot6(InputAction.CallbackContext context);
        void OnHotbarslot7(InputAction.CallbackContext context);
    }
    public interface IInteractionActions
    {
        void OnMainInteraction(InputAction.CallbackContext context);
        void OnSecondaryInteraction(InputAction.CallbackContext context);
    }
    public interface IRaftActions
    {
        void OnChangeValue(InputAction.CallbackContext context);
    }
    public interface IMenusActions
    {
        void OnToggleInventory(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseClick(InputAction.CallbackContext context);
        void OnExitSign(InputAction.CallbackContext context);
        void OnEscape(InputAction.CallbackContext context);
    }
    public interface IDebugActions
    {
        void OnOpen(InputAction.CallbackContext context);
        void OnAutoComplete(InputAction.CallbackContext context);
        void OnLoadCommand(InputAction.CallbackContext context);
        void OnHideHUD(InputAction.CallbackContext context);
        void OnNewaction(InputAction.CallbackContext context);
    }
}
